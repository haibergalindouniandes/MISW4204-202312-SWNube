version: "3.2"
services:
  rabbitmq_broker:
    build:
      context: .
      dockerfile: ./rabbit_mq/Dockerfile
    container_name: rabbitmq_broker
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - convert_network

  postgres:
    restart: always
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: "dbconvert"
      POSTGRES_USER: "dbuser"
      POSTGRES_PASSWORD: "dbpass"
      PGDATA: "/var/lib/postgresql/data"
    ports:
      - "5555:5432"
    networks:
      - convert_network

  ftp:
    container_name: ftp_server
    image: garethflowers/ftp-server
    environment:
      - FTP_USER=ftp_user
      - FTP_PASS=ftp_password
    restart: always
    ports:
      - '20-21:20-21/tcp'
      - '40000-40009:40000-40009/tcp'
    volumes:
      - ./shared:/home/ftp_user/shared

  mcs_tasks:
    image: mcs_tasks:latest
    volumes:
      - ./mcs_tasks/:/mnt/
    build: ./mcs_tasks
    working_dir: /backend/
    # command: gunicorn --bind 0.0.0.0:5000 api_commands:app
    command: python api_commands.py
    container_name: mcs_tasks
    ports:
      - "5000:5000"
    networks:
      - convert_network
    depends_on:
      - rabbitmq_broker
      - postgres

  celery_worker:
    image: celery_worker:latest
    environment:
      - C_FORCE_ROOT=true
    volumes:
      - ./worker/:/mnt/
    build: ./worker
    working_dir: /backend/
    command: celery -A worker.celery worker --pool=solo -l info
    container_name: celery_worker
    networks:
      - convert_network
    depends_on:
      - rabbitmq_broker
      - postgres

  nginx_proxy:
    image: nginx:latest
    ports:
      - 8080:8080
    volumes:
      - ./nginx/nginx-proxy.conf:/etc/nginx/conf.d/default.conf:ro
    container_name: nginx_proxy
    networks:
      - convert_network
    depends_on:
      # - mcs_auth
      - mcs_tasks
      # - mcs_files        

networks:
  convert_network:
    driver: bridge
