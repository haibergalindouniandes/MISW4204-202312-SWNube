version: "3.2"
services:
  postgres:    
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_DB=dbconvert
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=dbpass
      - PGDATA=/var/lib/postgresql/data
    restart: always
    ports:
      - "5432:5432"
    networks:
      convert_network:
        ipv4_address: 172.168.0.10 
  
  rabbitmq_broker:
    build:
      context: .
      dockerfile: ./rabbit_mq/Dockerfile
    container_name: rabbitmq_broker
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      convert_network:
        ipv4_address: 172.168.0.11

  ftp_server:
    container_name: ftp_server
    image: stilliard/pure-ftpd:hardened
    environment:
      - PUBLICHOST=0.0.0.0
      - FTP_USER_NAME=converteruser
      - FTP_USER_PASS=Converter2023
      - FTP_USER_HOME=/home/converteruser/shared
    restart: always
    ports:
      - '21:21'
      - '30000-30009:30000-30009'
    volumes:
      - ./ftp:/home/converteruser/shared
    networks:
      convert_network:
        ipv4_address: 172.168.0.12

  mcs_auth_commands:
    restart: always
    image: mcs_auth:latest
    volumes:
      - ./mcs_auth/:/backend/
    build: ./mcs_auth
    working_dir: /backend/
    command: sh run_commands.sh
    container_name: mcs_auth_commands
    networks:
      convert_network:
        ipv4_address: 172.168.0.13
    depends_on:
      - postgres

  mcs_auth_queries:
    image: mcs_auth:latest
    volumes:
      - ./mcs_auth/:/backend/
    build: ./mcs_auth
    working_dir: /backend/
    command: sh run_queries.sh
    container_name: mcs_auth_queries
    restart: always
    networks:
      - convert_network
    depends_on:
      - postgres

  mcs_tasks_commands:
    image: mcs_tasks:latest
    environment:
      - FTP_SERVER=172.168.0.12     
    volumes:
      - ./mcs_tasks/:/backend/
    build: ./mcs_tasks
    working_dir: /backend/
    command: sh run_commands.sh
    container_name: mcs_tasks_commands
    restart: always
    networks:
      convert_network:
        ipv4_address: 172.168.0.14
    depends_on:
      - postgres
      - rabbitmq_broker
      - ftp_server

  mcs_tasks_queries:
    image: mcs_tasks:latest
    volumes:
      - ./mcs_tasks/:/backend/
    build: ./mcs_tasks
    working_dir: /backend/
    command: sh run_queries.sh
    container_name: mcs_tasks_queries
    restart: always
    networks:
      convert_network:
        ipv4_address: 172.168.0.15
    depends_on:
      - postgres

  celery_worker:
    image: celery_worker:latest
    environment:
      - C_FORCE_ROOT=true
    build: ./celery_worker
    working_dir: /backend/
    volumes:
      - ./celery_worker/:/backend/
    command: celery -A worker.celery worker --pool=solo -l info
    container_name: celery_worker
    restart: always
    networks:
      convert_network:
        ipv4_address: 172.168.0.16
    depends_on:
      - postgres
      - rabbitmq_broker
      - ftp_server

  nginx_proxy:
    image: nginx:latest
    ports:
      - 8080:8080
    volumes:
      - ./nginx/nginx-proxy.conf:/etc/nginx/conf.d/default.conf:ro
    container_name: nginx_proxy
    restart: always
    networks:
      - convert_network
    depends_on:
      - postgres
      - rabbitmq_broker
      - ftp_server
      - mcs_auth_commands
      - mcs_auth_queries
      - mcs_tasks_commands
      - mcs_tasks_queries
      # - mcs_files_queries      

networks:
  convert_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.168.0.0/24